VS filter: testpath:TestAssembly:specflowtest/Feature:SpecFlowFeature1/Scenario:Add+two+numbers
Discovering target: Default
Discovering tests from assembly: C:\Users\mft\Documents\Visual Studio 2015\Projects\specflowtest\specflowtest\bin\Debug\specflowtest.dll
Appdomain Disposed
Test Suite Dump
#0: specflowtest/Default - 
#1: Default - 
#2: specflowtest - 
#3: SpecFlowFeature1 - 
#4: Add two numbers - TestAssembly:specflowtest/Feature:SpecFlowFeature1/Scenario:Add+two+numbers
End: Test Suite Dump
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: testitem #4 from normal test queue 
Thread#0:Scheduler: considering testitem #4 for thread
Thread#0:Scheduler: using testitem #4 for thread
Thread#0:Scheduler: Test #4 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread #0: creating new test thread executor for specflowtest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Loading SpecRun type 'TechTalk.SpecRun.Framework.TestAssemblyExecutor' from: C:\Users\mft\AppData\Local\Temp\1\VisualStudioTestExplorerExtensions\SpecRun.Runner.1.5.2\tools\TechTalk.SpecRun.Framework.Executor.dll
Thread#0: Test #4/0 is started on thread #0
Thread#0:B:Given I have entered 50 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
Thread#0:B:And I have entered 70 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
Thread#0:B:When I press add
Thread#0:T:done: CalculatorSteps.WhenIPressAdd() (0,0s)
Thread#0:B:Then the result should be 120 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<120>. Actual:<70>. 
Thread#0:Scheduler: reschedule tests for testitem #0
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: dequeuing a rescheduled testitem: #4
Thread#0:Scheduler: considering testitem #4 for thread
Thread#0:Scheduler: using testitem #4 for thread
Thread#0:Scheduler: Test #4 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #4/0 is finished on thread #0 as Failed within 0,120012 seconds
Thread#0: Test #4/1 is started on thread #0
Thread#0:B:Given I have entered 50 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
Thread#0:B:And I have entered 70 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
Thread#0:B:When I press add
Thread#0:T:done: CalculatorSteps.WhenIPressAdd() (0,0s)
Thread#0:B:Then the result should be 120 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<120>. Actual:<70>. 
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: dequeuing a rescheduled testitem: #4
Thread#0:Scheduler: considering testitem #4 for thread
Thread#0:Scheduler: using testitem #4 for thread
Thread#0:Scheduler: Test #4 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #4/1 is finished on thread #0 as Failed within 0,0040004 seconds
Thread#0: Test #4/2 is started on thread #0
Thread#0:B:Given I have entered 50 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
Thread#0:B:And I have entered 70 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
Thread#0:B:When I press add
Thread#0:T:done: CalculatorSteps.WhenIPressAdd() (0,0s)
Thread#0:B:Then the result should be 120 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<120>. Actual:<70>. 
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: at the end of normal test queue
Thread#0:Scheduler: enumerator for thread is at end
Thread#0:Scheduler: No more tests for thread 
Thread#0: Test #4/2 is finished on thread #0 as Failed within 0,0050005 seconds
Appdomain Disposed
Thread#-1:Scheduler: get next test for thread
Thread#:Scheduler: at the end of normal test queue
Thread#-1:Scheduler: enumerator for thread is at end
Total: 1 (test executions: 3)
Succeeded: 0
Ignored: 0
Pending: 0
Skipped: 0
Failed: 1
